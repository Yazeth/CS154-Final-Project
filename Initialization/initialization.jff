<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--Created with JFLAP 6.4.--><structure>&#13;
	<type>turing</type>&#13;
	<automaton>&#13;
		<!--The list of states.-->&#13;
		<block id="0" name="Allocate Stack Space">&#13;
			<tag>allocate.jff</tag>&#13;
			<x>167.0</x>&#13;
			<y>244.0</y>&#13;
		</block>&#13;
		<block id="1" name="Mark Initial States">&#13;
			<tag>mark.jff</tag>&#13;
			<x>315.0</x>&#13;
			<y>301.0</y>&#13;
		</block>&#13;
		<block id="2" name="End Initialization">&#13;
			<tag>Machine2</tag>&#13;
			<x>452.0</x>&#13;
			<y>343.0</y>&#13;
			<final/>&#13;
		</block>&#13;
		<block id="3" name="Start">&#13;
			<tag>Machine3</tag>&#13;
			<x>57.0</x>&#13;
			<y>200.0</y>&#13;
			<initial/>&#13;
		</block>&#13;
		<!--The list of transitions.-->&#13;
		<transition block="true">&#13;
			<from>1</from>&#13;
			<to>2</to>&#13;
			<read>~</read>&#13;
		</transition>&#13;
		<transition block="true">&#13;
			<from>3</from>&#13;
			<to>0</to>&#13;
			<read>~</read>&#13;
		</transition>&#13;
		<transition block="true">&#13;
			<from>0</from>&#13;
			<to>1</to>&#13;
			<read>~</read>&#13;
		</transition>&#13;
		<!--The list of automata-->&#13;
		<allocate.jff>&#13;
			<!--The list of states.-->&#13;
			<block id="0" name="q0">&#13;
				<tag>Machine0</tag>&#13;
				<x>55.0</x>&#13;
				<y>214.0</y>&#13;
				<initial/>&#13;
			</block>&#13;
			<block id="1" name="q1">&#13;
				<tag>Machine1</tag>&#13;
				<x>222.0</x>&#13;
				<y>213.0</y>&#13;
			</block>&#13;
			<block id="2" name="q2">&#13;
				<tag>Machine2</tag>&#13;
				<x>328.0</x>&#13;
				<y>213.0</y>&#13;
			</block>&#13;
			<block id="3" name="q3">&#13;
				<tag>Machine3</tag>&#13;
				<x>448.0</x>&#13;
				<y>213.0</y>&#13;
			</block>&#13;
			<block id="4" name="q4">&#13;
				<tag>Machine4</tag>&#13;
				<x>571.0</x>&#13;
				<y>218.0</y>&#13;
				<final/>&#13;
			</block>&#13;
			<!--The list of transitions.-->&#13;
			<transition>&#13;
				<from>1</from>&#13;
				<to>2</to>&#13;
				<read/>&#13;
				<write>Z</write>&#13;
				<move>L</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>2</from>&#13;
				<to>3</to>&#13;
				<read/>&#13;
				<write>1</write>&#13;
				<move>R</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>3</from>&#13;
				<to>4</to>&#13;
				<read>Z</read>&#13;
				<write>Z</write>&#13;
				<move>R</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>0</from>&#13;
				<to>1</to>&#13;
				<read>1</read>&#13;
				<write>1</write>&#13;
				<move>L</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>0</from>&#13;
				<to>1</to>&#13;
				<read>m</read>&#13;
				<write>m</write>&#13;
				<move>L</move>&#13;
			</transition>&#13;
			<!--The list of automata-->&#13;
			<Machine0/>&#13;
			<Machine2/>&#13;
			<Machine1/>&#13;
			<Machine4/>&#13;
			<Machine3/>&#13;
			<note>&#13;
				<text>Function:
Allocate space for the stack on the left of the TM's input tape

Expected input: start of w
Expected output: start of w, with the letter 'Z' preceding it

Using the stack: 
1. Left-most set of 1s will be the top of the stack
2. Reading the top of the stack should be done 
     starting from left to right</text>&#13;
				<x>0.0</x>&#13;
				<y>0.0</y>&#13;
			</note>&#13;
		</allocate.jff>&#13;
		<mark.jff>&#13;
			<!--The list of states.-->&#13;
			<block id="0" name="q0">&#13;
				<tag>Machine0</tag>&#13;
				<x>94.0</x>&#13;
				<y>207.0</y>&#13;
				<initial/>&#13;
			</block>&#13;
			<block id="1" name="Mark Initial Subroutine(s)">&#13;
				<tag>check.jff</tag>&#13;
				<x>222.0</x>&#13;
				<y>264.0</y>&#13;
			</block>&#13;
			<block id="2" name="q2">&#13;
				<tag>Machine2</tag>&#13;
				<x>407.0</x>&#13;
				<y>282.0</y>&#13;
			</block>&#13;
			<block id="3" name="q3">&#13;
				<tag>Machine3</tag>&#13;
				<x>606.0</x>&#13;
				<y>279.0</y>&#13;
				<final/>&#13;
			</block>&#13;
			<!--The list of transitions.-->&#13;
			<transition>&#13;
				<from>2</from>&#13;
				<to>3</to>&#13;
				<read>Z</read>&#13;
				<write>Z</write>&#13;
				<move>S</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>2</from>&#13;
				<to>2</to>&#13;
				<read>0</read>&#13;
				<write>0</write>&#13;
				<move>L</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>2</from>&#13;
				<to>2</to>&#13;
				<read>1</read>&#13;
				<write>1</write>&#13;
				<move>L</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>2</from>&#13;
				<to>2</to>&#13;
				<read>D</read>&#13;
				<write>D</write>&#13;
				<move>L</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>2</from>&#13;
				<to>2</to>&#13;
				<read>C</read>&#13;
				<write>C</write>&#13;
				<move>L</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>2</from>&#13;
				<to>2</to>&#13;
				<read>m</read>&#13;
				<write>m</write>&#13;
				<move>L</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>0</from>&#13;
				<to>0</to>&#13;
				<read>0</read>&#13;
				<write>0</write>&#13;
				<move>R</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>0</from>&#13;
				<to>0</to>&#13;
				<read>1</read>&#13;
				<write>1</write>&#13;
				<move>R</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>1</from>&#13;
				<to>1</to>&#13;
				<read>0</read>&#13;
				<write>0</write>&#13;
				<move>R</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>1</from>&#13;
				<to>1</to>&#13;
				<read>1</read>&#13;
				<write>1</write>&#13;
				<move>R</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>1</from>&#13;
				<to>1</to>&#13;
				<read>D</read>&#13;
				<write>D</write>&#13;
				<move>R</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>0</from>&#13;
				<to>0</to>&#13;
				<read>m</read>&#13;
				<write>m</write>&#13;
				<move>R</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>1</from>&#13;
				<to>1</to>&#13;
				<read>m</read>&#13;
				<write>m</write>&#13;
				<move>R</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>0</from>&#13;
				<to>1</to>&#13;
				<read>D</read>&#13;
				<write>D</write>&#13;
				<move>S</move>&#13;
			</transition>&#13;
			<transition>&#13;
				<from>1</from>&#13;
				<to>2</to>&#13;
				<read>F</read>&#13;
				<write>F</write>&#13;
				<move>L</move>&#13;
			</transition>&#13;
			<!--The list of automata-->&#13;
			<check.jff>&#13;
				<!--The list of states.-->&#13;
				<block id="0" name="q0">&#13;
					<tag>Machine0</tag>&#13;
					<x>113.0</x>&#13;
					<y>196.0</y>&#13;
					<initial/>&#13;
				</block>&#13;
				<block id="1" name="q1">&#13;
					<tag>Machine1</tag>&#13;
					<x>251.0</x>&#13;
					<y>196.0</y>&#13;
				</block>&#13;
				<block id="2" name="q2">&#13;
					<tag>Machine2</tag>&#13;
					<x>336.0</x>&#13;
					<y>193.0</y>&#13;
				</block>&#13;
				<block id="3" name="q3">&#13;
					<tag>Machine3</tag>&#13;
					<x>482.0</x>&#13;
					<y>197.0</y>&#13;
				</block>&#13;
				<block id="4" name="q4">&#13;
					<tag>Machine4</tag>&#13;
					<x>614.0</x>&#13;
					<y>197.0</y>&#13;
					<final/>&#13;
				</block>&#13;
				<block id="5" name="q5">&#13;
					<tag>Machine5</tag>&#13;
					<x>461.0</x>&#13;
					<y>109.0</y>&#13;
				</block>&#13;
				<block id="6" name="q6">&#13;
					<tag>Machine6</tag>&#13;
					<x>616.0</x>&#13;
					<y>110.0</y>&#13;
					<final/>&#13;
				</block>&#13;
				<!--The list of transitions.-->&#13;
				<transition>&#13;
					<from>2</from>&#13;
					<to>3</to>&#13;
					<read>0</read>&#13;
					<write>0</write>&#13;
					<move>L</move>&#13;
				</transition>&#13;
				<transition>&#13;
					<from>1</from>&#13;
					<to>2</to>&#13;
					<read>1</read>&#13;
					<write>1</write>&#13;
					<move>R</move>&#13;
				</transition>&#13;
				<transition>&#13;
					<from>0</from>&#13;
					<to>1</to>&#13;
					<read>D</read>&#13;
					<write>D</write>&#13;
					<move>R</move>&#13;
				</transition>&#13;
				<transition>&#13;
					<from>3</from>&#13;
					<to>4</to>&#13;
					<read>D</read>&#13;
					<write>C</write>&#13;
					<move>R</move>&#13;
				</transition>&#13;
				<transition>&#13;
					<from>2</from>&#13;
					<to>5</to>&#13;
					<read>1</read>&#13;
					<write>1</write>&#13;
					<move>L</move>&#13;
				</transition>&#13;
				<transition>&#13;
					<from>5</from>&#13;
					<to>6</to>&#13;
					<read>D</read>&#13;
					<write>D</write>&#13;
					<move>R</move>&#13;
				</transition>&#13;
				<transition>&#13;
					<from>5</from>&#13;
					<to>5</to>&#13;
					<read>1</read>&#13;
					<write>1</write>&#13;
					<move>L</move>&#13;
				</transition>&#13;
				<transition>&#13;
					<from>3</from>&#13;
					<to>3</to>&#13;
					<read>1</read>&#13;
					<write>1</write>&#13;
					<move>L</move>&#13;
				</transition>&#13;
				<!--The list of automata-->&#13;
				<Machine0/>&#13;
				<Machine2/>&#13;
				<Machine1/>&#13;
				<Machine4/>&#13;
				<Machine3/>&#13;
				<Machine6/>&#13;
				<Machine5/>&#13;
				<note>&#13;
					<text>Check current transition if its from initial state (q0 = 1)
Expected input: Read head @ a letter D
Expected output: Read head at same position, and:
	1. D has been converted to C, or
	2. No change made to the input tape</text>&#13;
					<x>0.0</x>&#13;
					<y>0.0</y>&#13;
				</note>&#13;
			</check.jff>&#13;
			<Machine0/>&#13;
			<Machine2/>&#13;
			<Machine3/>&#13;
			<note>&#13;
				<text>Check all possible transitions if they are initial state, and mark them
Expected input: start of w, where the letter 'Z' precedes it
Expected output: start of w, and all transitions from starting states have 'D' replaced with 'C'</text>&#13;
				<x>0.0</x>&#13;
				<y>0.0</y>&#13;
			</note>&#13;
		</mark.jff>&#13;
		<Machine2/>&#13;
		<Machine3/>&#13;
		<note>&#13;
			<text>Expected input: Start of program
Function: Allocate space for stack and mark all initial states
Expected output: read-head at start of w, All initial states marked with C</text>&#13;
			<x>36.0</x>&#13;
			<y>18.0</y>&#13;
		</note>&#13;
	</automaton>&#13;
</structure>